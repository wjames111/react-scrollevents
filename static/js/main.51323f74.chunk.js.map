{"version":3,"sources":["App.js","index.js","bell.svg"],"names":["App","props","state","messageData","opacity","transform","messageAlerts","notifyAlert","color","scrollContainer","React","createRef","forEach","message","onScrollY","bind","elemInx","action","progress","this","animateProgress","num","parseInt","Math","round","opacAnim","scaleAnim","scaleTransCSS","getMessages","updatedAlerts","alertSize","alertColor","alertStyle","setState","ref","className","alt","src","bell","style","map","key","triggerElements","onScrollYCallback","isIndicator","indicatorPlacement","indicatorStyles","height","backgroundColor","isReplayable","isDebounce","debounceAmount","customComponent","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"oSAwGeA,E,kDAlGb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAEDC,MAAQ,CACXC,YAAa,CAAC,CAAC,aAAc,CAAEC,QAAS,EAAGC,UAAW,YAAc,oFAAqF,CAAC,aAAc,CAAED,QAAS,EAAGC,UAAW,YAAc,qEAAsE,CAAC,eAAgB,CAAED,QAAS,EAAGC,UAAW,YAAc,+EAAgF,CAAC,cAAe,CAAED,QAAS,EAAGC,UAAW,YAAc,yEAA0E,CAAC,cAAe,CAAED,QAAS,EAAGC,UAAW,YAAc,wEAAyE,CAAC,aAAc,CAAED,QAAS,EAAGC,UAAW,YAAc,6HAA8H,CAAC,eAAgB,CAAED,QAAS,EAAGC,UAAW,YAAc,iHAC14BC,cAAe,EACfC,YAAa,CAAEC,MAAO,UAAWH,UAAW,aAG9C,EAAKI,gBAAkBC,IAAMC,YAE7B,EAAKT,MAAMC,YAAYS,SAAQ,SAACC,GAC9B,sBAAkBA,EAAQ,KAAQH,IAAMC,eAG1C,EAAKG,UAAY,EAAKA,UAAUC,KAAf,gBAfA,E,sDAkBTC,EAASC,EAAQC,GAAW,IAAD,EACIC,KAAKjB,MAApCC,EAD2B,EAC3BA,YAAaG,EADc,EACdA,cAEfc,EAAkB,SAACC,GAIvB,OAHiBC,SAASD,EAAK,IAEC,IADRE,KAAKC,MAAMN,IAK/BO,EAAWL,EAAgB,GAC3BM,EAAYN,EAAgB,MAE5BO,EAAa,gBADKT,EAAW,GAAK,EAAKQ,EAAY,GAAM,EAAKA,EAAY,GAC7D,KACbE,EAAW,YAAOzB,GACxByB,EAAYZ,GAAS,GAAK,CAAEZ,QAASqB,EAAUpB,UAAWsB,GAE1D,IAiBME,EAAgBvB,GAhBL,QAAXW,EACEC,EAAW,GACN,EAGLZ,GACM,EAGH,EAGF,GAKHwB,EAAYD,EAAgBvB,EAAgB,CAAED,UAAW,cAAiB,CAAEA,UAAW,YACvF0B,EAAaF,EAAgB,EAAI,CAAErB,MAAO,OAAU,CAAEA,MAAO,WAC7DwB,EAAU,2BAAQF,GAAcC,GAEtCZ,KAAKc,SAAS,CACZ9B,YAAayB,EACbtB,cAAeuB,EACftB,YAAayB,M,+BAIP,IAAD,SAC6Cb,KAAKjB,MAAjDC,EADD,EACCA,YAAaG,EADd,EACcA,cAAeC,EAD7B,EAC6BA,YACpC,OACE,6BACE,yBAAK2B,IAAKf,KAAKV,gBAAiB0B,UAAU,OACtC,yBAAKA,UAAU,WACb,yBAAKC,IAAI,oBAAoBD,UAAU,eAAeE,IAAKC,MAC3D,0BAAMH,UAAU,kBAAhB,iBACA,0BAAMA,UAAU,eAAeI,MAAOhC,GAAcD,IAExD,yBAAK6B,UAAU,iBAGXhC,EAAYqC,KAAI,SAAC3B,GAAD,OAAa,yBAAK4B,IAAK5B,EAAQ,GAAIqB,IAAK,EAAK,aAAD,OAAcrB,EAAQ,KAAO0B,MAAO1B,EAAQ,GAAIsB,UAAU,YAAYtB,EAAQ,SAIhJ,kBAAC,IAAD,CACE6B,gBAAiBvC,EAAYqC,KAAI,SAAC3B,GAAD,OAAa,EAAK,aAAD,OAAcA,EAAQ,QACxE8B,kBAAmBxB,KAAKL,UACxBL,gBAAiBU,KAAKV,gBACtBmC,aAAW,EACXC,mBAAmB,OACnBC,gBAAiB,CAAEC,OAAQ,MAAOC,gBAAiB,QACnDC,cAAY,EACZC,YAAY,EACZC,gBAAc,EACdC,gBAAiB,Y,GA5FTC,aCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.51323f74.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ScrollEvents from 'react-scrollevents';\nimport bell from './bell.svg';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      messageData: [['messageOne', { opacity: 0, transform: 'scale(1)' }, 'Lorem ipsum aute officia ut aute ut dolor exercitation tempor pariatur nisi sit.'], ['messageTwo', { opacity: 0, transform: 'scale(1)' }, 'Exercitation et quis ea fugiat voluptate sit occaecat sint dolor.'], ['messageThree', { opacity: 0, transform: 'scale(1)' }, 'Voluptate magna proident aliqua cupidatat fugiat cillum sint reprehenderit.'], ['messageFour', { opacity: 0, transform: 'scale(1)' }, 'Veniam culpa nisi occaecat ut ex in adipisicing nulla aute consequat.'], ['messageFive', { opacity: 0, transform: 'scale(1)' }, 'Lorem ipsum in nostrud proident consequat est ea minim amet nostrud.'], ['messageSix', { opacity: 0, transform: 'scale(1)' }, 'Lorem ipsum dolor est excepteur sint eiusmod proident cillum mollit nisi enim ut consectetur officia excepteur consequat.'], ['messageSeven', { opacity: 0, transform: 'scale(1)' }, 'Ad laboris commodo non ad aliquip id fugiat dolor do in consectetur in ea deserunt incididunt reprehenderit.']],\n      messageAlerts: 0,\n      notifyAlert: { color: '#b5b9c1', transform: 'scale(1)' },\n    };\n\n    this.scrollContainer = React.createRef();\n\n    this.state.messageData.forEach((message) => {\n      this[`messageRef${message[0]}`] = React.createRef();\n    });\n\n    this.onScrollY = this.onScrollY.bind(this);\n  }\n\n  onScrollY(elemInx, action, progress) {\n    const { messageData, messageAlerts } = this.state;\n\n    const animateProgress = (num) => {\n      const endValue = parseInt(num, 10);\n      const progressRounded = Math.round(progress);\n      const frameAmount = (endValue / 100) * progressRounded;\n      return frameAmount;\n    };\n\n    const opacAnim = animateProgress(1);\n    const scaleAnim = animateProgress(1.75);\n    const scaleTransition = progress < 50 ? 1 - (scaleAnim / 10) : 1 + (scaleAnim / 10);\n    const scaleTransCSS = `scale(${scaleTransition})`;\n    const getMessages = [...messageData];\n    getMessages[elemInx][1] = { opacity: opacAnim, transform: scaleTransCSS };\n\n    const checkAlert = () => {\n      if (action === 'end') {\n        if (progress > 90) {\n          return 1;\n        }\n\n        if (messageAlerts) {\n          return -1;\n        }\n\n        return 0;\n      }\n\n      return 0;\n    };\n\n    const newAlerts = checkAlert();\n    const updatedAlerts = messageAlerts + newAlerts;\n    const alertSize = updatedAlerts > messageAlerts ? { transform: 'scale(1.2)' } : { transform: 'scale(1)' };\n    const alertColor = updatedAlerts > 0 ? { color: 'red' } : { color: '#b5b9c1' };\n    const alertStyle = { ...alertSize, ...alertColor };\n\n    this.setState({\n      messageData: getMessages,\n      messageAlerts: updatedAlerts,\n      notifyAlert: alertStyle,\n    });\n  }\n\n  render() {\n    const { messageData, messageAlerts, notifyAlert } = this.state;\n    return (\n      <div>\n        <div ref={this.scrollContainer} className=\"app\">\n            <div className=\"app-nav\">\n              <img alt=\"notification bell\" className=\"app-nav-bell\" src={bell} />\n              <span className=\"app-nav-header\">notifications</span>\n              <span className=\"app-nav-list\" style={notifyAlert}>{messageAlerts}</span>\n            </div>\n          <div className=\"app-container\">\n        \n            {\n              messageData.map((message) => <div key={message[0]} ref={this[`messageRef${message[0]}`]} style={message[1]} className=\"messages\">{message[2]}</div>)\n            }\n          </div>\n        </div>\n        <ScrollEvents\n          triggerElements={messageData.map((message) => this[`messageRef${message[0]}`])}\n          onScrollYCallback={this.onScrollY}\n          scrollContainer={this.scrollContainer}\n          isIndicator\n          indicatorPlacement=\"70vh\"\n          indicatorStyles={{ height: '1vh', backgroundColor: 'blue' }}\n          isReplayable\n          isDebounce={false}\n          debounceAmount\n          customComponent={null}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","module.exports = __webpack_public_path__ + \"static/media/bell.877d82b3.svg\";"],"sourceRoot":""}